# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: stf-api
# app and org for use with dashboard.serverless.com
app: stf-api
org: trevorshepard

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: nodejs12.x
plugins:
  - serverless-webpack
package:
  individually: true
custom:
   webpack:
    webpackConfig: './webpack.config.js' 
    packExternalModulesMaxBuffer: 1000000
    includeModules: true
    packagerOptions:
      scripts:
        - npm rebuild grpc --target=8.1.0 --target_arch=x64 --target_platform=linux --target_libc=glibc
functions:
  authorizerFunc:
    handler: handlers/authHandler.verifyAuth
  user-get:
    handler: handlers/user/get.get
    events:
      - http:
          path: user
          method: get
          cors: true
          authorizer:  # execute this before endpoint
            name: authorizerFunc
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: token
  user-create:
    handler: handlers/user/create.create
    events:
      - http:
          path: user
          method: post
          cors: true
  season-create:
    handler: handlers/season/create.create
    events:
      - http:
          path: season
          method: post
          cors: true
          authorizer:  # execute this before endpoint
            name: authorizerFunc
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: token
#    Define function environment variables here
#    environment:
#      variable2: value2

# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
